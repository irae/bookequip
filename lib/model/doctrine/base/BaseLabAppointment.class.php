<?php

/**
 * BaseLabAppointment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $equipment_id
 * @property date $appointment_date
 * @property date $original_date
 * @property integer $schedule_id
 * @property enum $appointment_type
 * @property enum $event_status
 * @property string $calendar_url
 * @property boolean $is_synched
 * @property LabEquipment $Equipment
 * @property sfGuardUser $User
 * @property LabEquipmentSchedule $ScheduleInfo
 * @property Doctrine_Collection $LabAppointmentInfo
 * 
 * @method integer              getUserId()             Returns the current record's "user_id" value
 * @method integer              getEquipmentId()        Returns the current record's "equipment_id" value
 * @method date                 getAppointmentDate()    Returns the current record's "appointment_date" value
 * @method date                 getOriginalDate()       Returns the current record's "original_date" value
 * @method integer              getScheduleId()         Returns the current record's "schedule_id" value
 * @method enum                 getAppointmentType()    Returns the current record's "appointment_type" value
 * @method enum                 getEventStatus()        Returns the current record's "event_status" value
 * @method string               getCalendarUrl()        Returns the current record's "calendar_url" value
 * @method boolean              getIsSynched()          Returns the current record's "is_synched" value
 * @method LabEquipment         getEquipment()          Returns the current record's "Equipment" value
 * @method sfGuardUser          getUser()               Returns the current record's "User" value
 * @method LabEquipmentSchedule getScheduleInfo()       Returns the current record's "ScheduleInfo" value
 * @method Doctrine_Collection  getLabAppointmentInfo() Returns the current record's "LabAppointmentInfo" collection
 * @method LabAppointment       setUserId()             Sets the current record's "user_id" value
 * @method LabAppointment       setEquipmentId()        Sets the current record's "equipment_id" value
 * @method LabAppointment       setAppointmentDate()    Sets the current record's "appointment_date" value
 * @method LabAppointment       setOriginalDate()       Sets the current record's "original_date" value
 * @method LabAppointment       setScheduleId()         Sets the current record's "schedule_id" value
 * @method LabAppointment       setAppointmentType()    Sets the current record's "appointment_type" value
 * @method LabAppointment       setEventStatus()        Sets the current record's "event_status" value
 * @method LabAppointment       setCalendarUrl()        Sets the current record's "calendar_url" value
 * @method LabAppointment       setIsSynched()          Sets the current record's "is_synched" value
 * @method LabAppointment       setEquipment()          Sets the current record's "Equipment" value
 * @method LabAppointment       setUser()               Sets the current record's "User" value
 * @method LabAppointment       setScheduleInfo()       Sets the current record's "ScheduleInfo" value
 * @method LabAppointment       setLabAppointmentInfo() Sets the current record's "LabAppointmentInfo" collection
 * 
 * @package    BookEquip
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLabAppointment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lab_appointment');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('equipment_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('appointment_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('original_date', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('schedule_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('appointment_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'basic',
              1 => 'advanced',
             ),
             ));
        $this->hasColumn('event_status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'approved',
              1 => 'pending',
              2 => 'billed',
             ),
             ));
        $this->hasColumn('calendar_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_synched', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LabEquipment as Equipment', array(
             'local' => 'equipment_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('LabEquipmentSchedule as ScheduleInfo', array(
             'local' => 'schedule_id',
             'foreign' => 'id'));

        $this->hasMany('LabAppointmentInfo', array(
             'local' => 'id',
             'foreign' => 'appointment_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}