<?php

/**
 * LabAppointmentTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class LabAppointmentTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object LabAppointmentTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('LabAppointment');
    }
	
	public function createEmptyQuery()
	{
		return Doctrine_Query::create()->from('LabAppointment');
	}

	public function weekAppointments(Doctrine_Query $query = null)
	{
		if (is_null($query)) $query = $this->createEmptyQuery();
		$query->andWhere('WEEK(appointment_date) = WEEK(NOW())');
		return $query;
	}
	
	public function userAppointments($userId)
	{
		$query = $this->createEmptyQuery()
			->andWhere('user_id = ?', $userId);
		
		return $query;
		
	}

	public function weekUserApointments($userId) 
	{
		return $this->weekAppointments($this->userAppointments($userId));
	}
	
	public function userAppointmentsByStatus($userId, $status)
	{
		$this->userAppointments($userId)->andWhere('event_status = ?', $status);
	}
	
	public function checkOwnership($appointmentId, $userId)
	{
		$query = $this->createEmptyQuery()->where('id = ?', $appointmentId)->andWhere('user_id = ?', $userId);
		
		if ($query->count() > 0) {
			return true;
		} else {
			return false;
		}
	
	}
	
	public function updateSchedule($appointmentId, $appointmentDate, $scheduleTimeId)
	{

		$query = Doctrine_Query::create()->
			update('LabAppointment')->
			set('schedule_id', '?', $scheduleTimeId, 'appointment_date', '?', $appointmentDate)->
			where('id = ?', $appointmentId);
			
		$query->execute();
		
	}
	
}